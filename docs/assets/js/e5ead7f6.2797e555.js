"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[704],{4117:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var n=t(74848),r=t(28453),i=t(11470),s=t(19365);const l={title:"Migration guide to Adapty SDK v.3.4",description:"Migrate to Adapty SDK v3.4 for better performance and new monetization features.",metadataTitle:"Migrating to Adapty SDK v3.4 | Adapty Docs"},o=void 0,d={id:"migration-to-adapty-sdk-34",title:"Migration guide to Adapty SDK v.3.4",description:"Migrate to Adapty SDK v3.4 for better performance and new monetization features.",source:"@site/versioned_docs/version-3.0/migration-to-adapty-sdk-34.md",sourceDirName:".",slug:"/migration-to-adapty-sdk-34",permalink:"/test_assignment_adapty/docs/migration-to-adapty-sdk-34",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Migration guide to Adapty SDK v.3.4",description:"Migrate to Adapty SDK v3.4 for better performance and new monetization features.",metadataTitle:"Migrating to Adapty SDK v3.4 | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Analytics export API",permalink:"/test_assignment_adapty/docs/export-analytics-api"},next:{title:"Migration guide to Adapty iOS SDK 3.3.x",permalink:"/test_assignment_adapty/docs/migration-to-330"}},c={},u=[];function p(e){const a={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.p,{children:"Adapty SDK 3.4.0 is a major release that introduces improvements that require migration steps on your end."}),"\n",(0,n.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,n.jsxs)(s.A,{value:"swift",label:"Swift",default:!0,children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update Adapty SDK activation"})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-diff",metastring:"showLineNumbers",children:'// In your AppDelegate class:\nimport Adapty\n\nlet configurationBuilder =\n    AdaptyConfiguration\n        .builder(withAPIKey: "PUBLIC_SDK_KEY")\n\n- Adapty.activate(with: configurationBuilder) { error in\n+ Adapty.activate(with: configurationBuilder.build()) { error in\n  // handle the error\n}\n'})}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update fallback paywall files"})}),(0,n.jsx)(a.p,{children:"Update your fallback paywall files to ensure compatibility with the new SDK version:"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"fallback-paywalls#download-fallback-paywalls-as-a-file-in-the-adapty-dashboard",children:"Download the updated fallback paywall files"})," from the Adapty Dashboard."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"ios-use-fallback-paywalls",children:"Replace the existing fallback paywalls in your mobile app"})," with the new files."]}),"\n"]})]}),(0,n.jsxs)(s.A,{value:"swiftui",label:"SwiftUI",default:!0,children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update Adapty SDK activation"})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-diff",metastring:"showLineNumbers",children:'import Adapty\n\n@main\nstruct SampleApp: App {\n    init() {\n      let configurationBuilder =\n        AdaptyConfiguration\n          .builder(withAPIKey: "PUBLIC_SDK_KEY")\n      \n        Task {\n-            try await Adapty.activate(with: configurationBuilder)\n+            try await Adapty.activate(with: configurationBuilder.build())\n        }\n    }\n\n    var body: some Scene {\n        WindowGroup {\n            ContentView()\n        }\n    }\n}\n'})}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update fallback paywall files"})}),(0,n.jsx)(a.p,{children:"Update your fallback paywall files to ensure compatibility with the new SDK version:"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"fallback-paywalls#download-fallback-paywalls-as-a-file-in-the-adapty-dashboard",children:"Download the updated fallback paywall files"})," from the Adapty Dashboard."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"ios-use-fallback-paywalls",children:"Replace the existing fallback paywalls in your mobile app"})," with the new files."]}),"\n"]})]}),(0,n.jsxs)(s.A,{value:"kotlin",label:"Kotlin",default:!0,children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update fallback paywall files"})}),(0,n.jsx)(a.p,{children:"Update your fallback paywall files to ensure compatibility with the new SDK version:"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"fallback-paywalls#download-fallback-paywalls-as-a-file-in-the-adapty-dashboard",children:"Download the updated fallback paywall files"})," from the Adapty Dashboard."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"ios-use-fallback-paywalls",children:"Replace the existing fallback paywalls in your mobile app"})," with the new files."]}),"\n"]}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update implementation of Observer Mode"})}),(0,n.jsx)(a.p,{children:"If you're using Observer Mode, make sure to update its implementation."}),(0,n.jsx)(a.p,{children:"In previous versions, you had to restore purchases so Adapty could recognize transactions made through your own infrastructure, as Adapty had no direct access to them in Observer Mode. If you used paywalls, you also needed to manually associate each transaction with the paywall that initiated it."}),(0,n.jsx)(a.p,{children:"In the new version, you must explicitly report each transaction for Adapty to recognize it. If you use paywalls, you also need to pass the variation ID to link the transaction to the paywall used."}),(0,n.jsx)(a.admonition,{type:"warning",children:(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Don't skip transaction reporting!"}),"\nIf you don't call ",(0,n.jsx)(a.code,{children:"reportTransaction"}),", Adapty won't recognize the transaction, it won\u2019t appear in analytics, and it won\u2019t be sent to integrations."]})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-diff",metastring:"showLineNumbers",children:"- Adapty.restorePurchases { result ->\n-     if (result is AdaptyResult.Success) {\n-         // success\n-     }\n- }\n- \n- Adapty.setVariationId(transactionId, variationId) { error ->\n-     if (error == null) {\n-         // success\n-     }\n- }\n\n+ val transactionInfo = TransactionInfo.fromPurchase(purchase)\n+ \n+ Adapty.reportTransaction(transactionInfo, variationId) { result ->\n+     if (result is AdaptyResult.Success) {\n+         // success\n+     }\n+ }\n"})})]}),(0,n.jsxs)(s.A,{value:"java",label:"Java",default:!0,children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update fallback paywall files"})}),(0,n.jsx)(a.p,{children:"Update your fallback paywall files to ensure compatibility with the new SDK version:"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"fallback-paywalls#download-fallback-paywalls-as-a-file-in-the-adapty-dashboard",children:"Download the updated fallback paywall files"})," from the Adapty Dashboard."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"ios-use-fallback-paywalls",children:"Replace the existing fallback paywalls in your mobile app"})," with the new files."]}),"\n"]}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update implementation of Observer Mode"})}),(0,n.jsx)(a.p,{children:"If you're using Observer Mode, make sure to update its implementation."}),(0,n.jsx)(a.p,{children:"In previous versions, you had to restore purchases so Adapty could recognize transactions made through your own infrastructure. If you used paywalls, you also needed to manually associate each transaction with the paywall that initiated it."}),(0,n.jsx)(a.p,{children:"In the new version, you must explicitly report each transaction for Adapty to recognize it. If you use paywalls, you also need to pass the variation ID to link the transaction to the paywall used."}),(0,n.jsx)(a.admonition,{type:"warning",children:(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Don't skip transaction reporting!"}),"\nIf you don't call ",(0,n.jsx)(a.code,{children:"reportTransaction"}),", Adapty won't recognize the transaction, it won\u2019t appear in analytics, and it won\u2019t be sent to integrations."]})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-diff",metastring:"showLineNumbers",children:"- Adapty.restorePurchases(result -> {\n-     if (result instanceof AdaptyResult.Success) {\n-         // success\n-     }\n- });\n- \n- Adapty.setVariationId(transactionId, variationId, error -> {\n-     if (error == null) {\n-         // success\n-     }\n- });\n\n+ TransactionInfo transactionInfo = TransactionInfo.fromPurchase(purchase);\n+ \n+ Adapty.reportTransaction(transactionInfo, variationId, result -> {\n+     if (result instanceof AdaptyResult.Success) {\n+         // success\n+     }\n+ });\n"})})]}),(0,n.jsxs)(s.A,{value:"flutter",label:"Flutter",default:!0,children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update fallback paywall files"})}),(0,n.jsx)(a.p,{children:"Update your fallback paywall files to ensure compatibility with the new SDK version:"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"fallback-paywalls#download-fallback-paywalls-as-a-file-in-the-adapty-dashboard",children:"Download the updated fallback paywall files"})," from the Adapty Dashboard."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"ios-use-fallback-paywalls",children:"Replace the existing fallback paywalls in your mobile app"})," with the new files."]}),"\n"]}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update implementation of Observer Mode"})}),(0,n.jsx)(a.p,{children:"If you're using Observer Mode, make sure to update its implementation."}),(0,n.jsxs)(a.p,{children:["Previously, different methods were used to report transactions to Adapty. In the new version, the ",(0,n.jsx)(a.code,{children:"reportTransaction"})," method should be used consistently across both Android and iOS. This method explicitly reports each transaction to Adapty, ensuring it's recognized. If a paywall was used, pass the variation ID to link the transaction to it."]}),(0,n.jsx)(a.admonition,{type:"warning",children:(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Don't skip transaction reporting!"}),"\nIf you don't call ",(0,n.jsx)(a.code,{children:"reportTransaction"}),", Adapty won't recognize the transaction, it won\u2019t appear in analytics, and it won\u2019t be sent to integrations."]})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-diff",metastring:"showLineNumbers",children:'- // every time when calling transaction.finish()\n- if (Platform.isAndroid) {\n-     try {\n-         await Adapty().restorePurchases();\n-     } on AdaptyError catch (adaptyError) {\n-         // handle the error\n-     } catch (e) {\n-     }\n- }\n\n  try {\n      // every time when calling transaction.finish()\n      await Adapty().reportTransaction(\n          "YOUR_TRANSACTION_ID", \n          variationId: "PAYWALL_VARIATION_ID", // optional\n      );\n  } on AdaptyError catch (adaptyError) {\n      // handle the error\n  } catch (e) {\n      // handle the error\n  }\n'})})]}),(0,n.jsxs)(s.A,{value:"rn",label:"React Native (TS)",default:!0,children:[(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update fallback paywall files"})}),(0,n.jsx)(a.p,{children:"Update your fallback paywall files to ensure compatibility with the new SDK version:"}),(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"fallback-paywalls#download-fallback-paywalls-as-a-file-in-the-adapty-dashboard",children:"Download the updated fallback paywall files"})," from the Adapty Dashboard."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"ios-use-fallback-paywalls",children:"Replace the existing fallback paywalls in your mobile app"})," with the new files."]}),"\n"]}),(0,n.jsx)(a.p,{children:(0,n.jsx)(a.strong,{children:"Update implementation of Observer Mode"})}),(0,n.jsx)(a.p,{children:"If you're using Observer Mode, make sure to update its implementation."}),(0,n.jsxs)(a.p,{children:["Previously, different methods were used to report transactions to Adapty. In the new version, the ",(0,n.jsx)(a.code,{children:"reportTransaction"})," method should be used consistently across both Android and iOS. This method explicitly reports each transaction to Adapty, ensuring it's recognized. If a paywall was used, pass the variation ID to link the transaction to it."]}),(0,n.jsx)(a.admonition,{type:"warning",children:(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.strong,{children:"Don't skip transaction reporting!"}),"\nIf you don't call ",(0,n.jsx)(a.code,{children:"reportTransaction"}),", Adapty won't recognize the transaction, it won\u2019t appear in analytics, and it won\u2019t be sent to integrations."]})}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-diff",metastring:"showLineNumbers ",children:"- if (Platform.OS === 'android') {\n-     try {\n-         await adapty.restorePurchases();\n-     } catch (error) {\n-         // handle the error\n-     }\n- }\n\n const variationId = paywall.variationId;\n\n try {\n     await adapty.reportTransaction(transactionId, variationId);\n } catch (error) {\n     // handle the `AdaptyError`\n }\n \n"})})]})]})]})}function h(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},11470:(e,a,t)=>{t.d(a,{A:()=>v});var n=t(96540),r=t(34164),i=t(23104),s=t(56347),l=t(205),o=t(57485),d=t(31682),c=t(70679);function u(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??function(e){return u(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:r}}=e;return{value:a,label:t,attributes:n,default:r}}))}(t);return function(e){const a=(0,d.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function h(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function f(e){let{queryString:a=!1,groupId:t}=e;const r=(0,s.W6)(),i=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,o.aZ)(i),(0,n.useCallback)((e=>{if(!i)return;const a=new URLSearchParams(r.location.search);a.set(i,e),r.replace({...r.location,search:a.toString()})}),[i,r])]}function y(e){const{defaultValue:a,queryString:t=!1,groupId:r}=e,i=p(e),[s,o]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!h({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:i}))),[d,u]=f({queryString:t,groupId:r}),[y,w]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[r,i]=(0,c.Dv)(t);return[r,(0,n.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:r}),b=(()=>{const e=d??y;return h({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{b&&o(b)}),[b]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),w(e)}),[u,w,i]),tabValues:i}}var w=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var m=t(74848);function g(e){let{className:a,block:t,selectedValue:n,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const a=e.currentTarget,t=o.indexOf(a),r=l[t].value;r!==n&&(d(a),s(r))},u=e=>{let a=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;a=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;a=o[t]??o[o.length-1];break}}a?.focus()};return(0,m.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},a),children:l.map((e=>{let{value:a,label:t,attributes:i}=e;return(0,m.jsx)("li",{role:"tab",tabIndex:n===a?0:-1,"aria-selected":n===a,ref:e=>o.push(e),onKeyDown:u,onClick:c,...i,className:(0,r.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":n===a}),children:t??a},a)}))})}function x(e){let{lazy:a,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=i.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,m.jsx)("div",{className:"margin-top--md",children:i.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==r})))})}function j(e){const a=y(e);return(0,m.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,m.jsx)(g,{...a,...e}),(0,m.jsx)(x,{...a,...e})]})}function v(e){const a=(0,w.A)();return(0,m.jsx)(j,{...e,children:u(e.children)},String(a))}},19365:(e,a,t)=>{t.d(a,{A:()=>s});t(96540);var n=t(34164);const r={tabItem:"tabItem_Ymn6"};var i=t(74848);function s(e){let{children:a,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,s),hidden:t,children:a})}}}]);