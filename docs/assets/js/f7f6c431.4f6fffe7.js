"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[6127],{11470:(e,t,n)=>{n.d(t,{A:()=>w});var a=n(96540),r=n(34164),i=n(23104),s=n(56347),o=n(205),u=n(57485),l=n(31682),c=n(70679);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,l.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,s.W6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function b(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=p(e),[s,u]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[l,d]=f({queryString:n,groupId:r}),[b,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,c.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:r}),m=(()=>{const e=l??b;return h({value:e,tabValues:i})?e:null})();(0,o.A)((()=>{m&&u(m)}),[m]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);u(e),d(e),g(e)}),[d,g,i]),tabValues:i}}var g=n(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function v(e){let{className:t,block:n,selectedValue:a,selectValue:s,tabValues:o}=e;const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const t=e.currentTarget,n=u.indexOf(t),r=o[n].value;r!==a&&(l(t),s(r))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>u.push(e),onKeyDown:d,onClick:c,...i,className:(0,r.A)("tabs__item",m.tabItem,i?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function A(e){let{lazy:t,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function I(e){const t=b(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,y.jsx)(v,{...t,...e}),(0,y.jsx)(A,{...t,...e})]})}function w(e){const t=(0,g.A)();return(0,y.jsx)(I,{...e,children:d(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var a=n(34164);const r={tabItem:"tabItem_Ymn6"};var i=n(74848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,s),hidden:n,children:t})}},50970:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(74848),r=n(28453),i=(n(26393),n(11470)),s=n(19365);const o={title:"Firebase apps",description:"Integrate Firebase with Adapty to enhance user analytics and subscription tracking for your mobile app.",metadataTitle:"Firebase Integration for Apps | Adapty Docs"},u=void 0,l={id:"firebase-apps",title:"Firebase apps",description:"Integrate Firebase with Adapty to enhance user analytics and subscription tracking for your mobile app.",source:"@site/versioned_docs/version-3.0/firebase-apps.md",sourceDirName:".",slug:"/firebase-apps",permalink:"/docs/firebase-apps",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Firebase apps",description:"Integrate Firebase with Adapty to enhance user analytics and subscription tracking for your mobile app.",metadataTitle:"Firebase Integration for Apps | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Google Reduced Service Fee",permalink:"/docs/google-reduced-service-fee"},next:{title:"Refund saver",permalink:"/docs/refund-saver"}},c={},d=[{value:"User Identification",id:"user-identification",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"This page is about integration of Adapty in you app, if it works on Firebase."}),"\n",(0,a.jsxs)(t.admonition,{type:"note",children:[(0,a.jsx)(t.p,{children:"Get started"}),(0,a.jsxs)(t.p,{children:["This is not all steps required for Adapty to work, just some useful tips for integration with Firebase. If you want to integrate Adapty in you app, you should read ",(0,a.jsx)(t.a,{href:"quickstart",children:"Quickstart Guide"})," first"]})]}),"\n",(0,a.jsx)(t.h2,{id:"user-identification",children:"User Identification"}),"\n",(0,a.jsx)(t.p,{children:"If you're using Firebase auth, this snippet may help you keep your users in sync between Firebase and Adapty. Note that it's just an example, and you should consider your app auth specifics."}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(s.A,{value:"swift",label:"iOS with Firebase",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-swift",metastring:"showLineNumbers",children:'import Adapty\nimport Firebase\n \n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n \n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        // Configure Adapty before Firebase\n        Adapty.activate("YOUR_API_KEY")\n        Adapty.delegate = self\n        \n        // Configure Firebase\n        FirebaseApp.configure()\n        \n        // Add state change listener for Firebase Authentication\n        Auth.auth().addStateDidChangeListener { (auth, user) in\n            if let uid = user?.uid {\n                // identify Adapty SDK with new Firebase user\n                Adapty.identify(uid) { error in\n                    if let e = error {\n                        print("Sign in error: \\(e.localizedDescription)")\n                    } else {\n                        print("User \\(uid) signed in")\n                    }\n                }\n            }\n        }\n \n        return true\n    }\n \n}\n \nextension AppDelegate: AdaptyDelegate {\n \n    // MARK: - Adapty delegate\n    func didReceiveUpdatedPurchaserInfo(_ purchaserInfo: PurchaserInfoModel) {\n        // You can optionally post to the notification center whenever\n        // purchaser info changes.\n \n        // You can subscribe to this notification throughout your app\n        // to refresh tableViews or change the UI based on the user\'s\n        // subscription status\n        \n        NotificationCenter.default.post(name: NSNotification.Name(rawValue: "com.Adapty.PurchaserInfoUpdatedNotification"), object: purchaserInfo)\n    }\n \n}\n'})})}),(0,a.jsx)(s.A,{value:"kotlin",label:"Android with Firebase",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-kotlin",metastring:"showLineNumbers",children:'class App : Application() {\n\n    override fun onCreate() {\n        super.onCreate()\n        // Configure Adapty\n        Adapty.activate(this, "YOUR_API_KEY")\n\n        Adapty.setOnPurchaserInfoUpdatedListener(object : OnPurchaserInfoUpdatedListener {\n            override fun onPurchaserInfoReceived(purchaserInfo: PurchaserInfoModel) {\n                // handle any changes to subscription state\n            }\n        })\n\n        // Add state change listener for Firebase Authentication\n        FirebaseAuth.getInstance().addAuthStateListener { auth ->\n            val currentUserId = auth.currentUser?.uid\n\n            if (currentUserId != null) {\n                // identify Adapty SDK with new Firebase user\n                Adapty.identify(currentUserId) { error ->\n                    if (error == null) {\n                        //success\n                    }\n                }\n            } else {\n                Adapty.logout { }\n            }\n        }\n    }\n}\n'})})})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);