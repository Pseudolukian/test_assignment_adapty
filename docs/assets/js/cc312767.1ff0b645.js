"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[1],{11470:(e,a,t)=>{t.d(a,{A:()=>j});var n=t(96540),s=t(34164),l=t(23104),r=t(56347),o=t(205),i=t(57485),c=t(31682),u=t(70679);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??function(e){return d(e).map((e=>{let{props:{value:a,label:t,attributes:n,default:s}}=e;return{value:a,label:t,attributes:n,default:s}}))}(t);return function(e){const a=(0,c.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function p(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function m(e){let{queryString:a=!1,groupId:t}=e;const s=(0,r.W6)(),l=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,i.aZ)(l),(0,n.useCallback)((e=>{if(!l)return;const a=new URLSearchParams(s.location.search);a.set(l,e),s.replace({...s.location,search:a.toString()})}),[l,s])]}function g(e){const{defaultValue:a,queryString:t=!1,groupId:s}=e,l=h(e),[r,i]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!p({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:a,tabValues:l}))),[c,d]=m({queryString:t,groupId:s}),[g,y]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[s,l]=(0,u.Dv)(t);return[s,(0,n.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:s}),f=(()=>{const e=c??g;return p({value:e,tabValues:l})?e:null})();(0,o.A)((()=>{f&&i(f)}),[f]);return{selectedValue:r,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),y(e)}),[d,y,l]),tabValues:l}}var y=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=t(74848);function b(e){let{className:a,block:t,selectedValue:n,selectValue:r,tabValues:o}=e;const i=[],{blockElementScrollPositionUntilNextRender:c}=(0,l.a_)(),u=e=>{const a=e.currentTarget,t=i.indexOf(a),s=o[t].value;s!==n&&(c(a),r(s))},d=e=>{let a=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=i.indexOf(e.currentTarget)+1;a=i[t]??i[0];break}case"ArrowLeft":{const t=i.indexOf(e.currentTarget)-1;a=i[t]??i[i.length-1];break}}a?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},a),children:o.map((e=>{let{value:a,label:t,attributes:l}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:n===a?0:-1,"aria-selected":n===a,ref:e=>i.push(e),onKeyDown:d,onClick:u,...l,className:(0,s.A)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":n===a}),children:t??a},a)}))})}function x(e){let{lazy:a,children:t,selectedValue:s}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=l.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:l.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==s})))})}function v(e){const a=g(e);return(0,w.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,w.jsx)(b,{...a,...e}),(0,w.jsx)(x,{...a,...e})]})}function j(e){const a=(0,y.A)();return(0,w.jsx)(v,{...e,children:d(e.children)},String(a))}},19365:(e,a,t)=>{t.d(a,{A:()=>r});t(96540);var n=t(34164);const s={tabItem:"tabItem_Ymn6"};var l=t(74848);function r(e){let{children:a,hidden:t,className:r}=e;return(0,l.jsx)("div",{role:"tabpanel",className:(0,n.A)(s.tabItem,r),hidden:t,children:a})}},28446:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/36b8480-fallback_for_custom_tag-1969afd1e013f98a39b6007ef8a14032.webp"},36924:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/7ec0e4f-custom_tag-aaf54276a8245fb2914ab286d0ea6689.webp"},46868:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>h});var n=t(74848),s=t(28453),l=t(34028),r=(t(26393),t(11470)),o=t(19365);const i={title:"Custom tags in legacy Paywall Builder",description:"Implement custom tags in Adapty's legacy Paywall Builder to enhance subscription workflows.",metadataTitle:"Custom Tags in Legacy Paywall | Adapty Docs"},c=void 0,u={id:"custom-tags-in-legacy-paywall-builder",title:"Custom tags in legacy Paywall Builder",description:"Implement custom tags in Adapty's legacy Paywall Builder to enhance subscription workflows.",source:"@site/versioned_docs/version-3.0/custom-tags-in-legacy-paywall-builder.md",sourceDirName:".",slug:"/custom-tags-in-legacy-paywall-builder",permalink:"/docs/custom-tags-in-legacy-paywall-builder",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Custom tags in legacy Paywall Builder",description:"Implement custom tags in Adapty's legacy Paywall Builder to enhance subscription workflows.",metadataTitle:"Custom Tags in Legacy Paywall | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Custom fonts",permalink:"/docs/using-custom-fonts-in-legacy-paywall-builder"},next:{title:"Design paywall with remote config",permalink:"/docs/customize-paywall-with-remote-config"}},d={},h=[{value:"How to add a custom tag to a paywall",id:"how-to-add-a-custom-tag-to-a-paywall",level:2},{value:"How to use custom tags in your mobile app",id:"how-to-use-custom-tags-in-your-mobile-app",level:2}];function p(e){const a={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsx)(a.p,{children:"Custom tags are only available on AdaptyUI SDK v.2.1.0 and higher"})}),"\n",(0,n.jsx)(a.p,{children:'Custom tags are a feature designed to avoid creating separate paywalls for different situations. Imagine having a single paywall that adapts to different scenarios by incorporating specific user data. For instance, a simple greeting like "Hello!" can transform into a personalized message, such as "Hello, John!" or "Hello, Ann!"'}),"\n",(0,n.jsx)(a.p,{children:"Various ways to use:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"User\u2019s email/name on the paywall"}),"\n",(0,n.jsx)(a.li,{children:"Current day of the week on the paywall to increase sales (as in \u201cHappy Thursday\u201c)"}),"\n",(0,n.jsx)(a.li,{children:"Custom properties of the products you're selling (name of the personalized fitness program, phone number in the VoIP app, etc)"}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"Custom tags enable you to create a consistent paywall for various situations, allowing your app's user interface to dynamically incorporate the relevant information. It's a practical solution for tailoring a paywall design for each specific user."}),"\n",(0,n.jsxs)(a.admonition,{type:"warning",children:[(0,n.jsx)(a.p,{children:"Make sure to add fallbacks for every line with custom tags"}),(0,n.jsx)(a.p,{children:"In some cases your app might not know what to replace a custom tag with: for example, if your Paywall is delivered to users on the older versions of AdaptyUI SDK."}),(0,n.jsxs)(a.p,{children:["So when using custom tags, make sure to add fallback lines \u2014 they will be used to replace the lines containing unknown custom tags. Otherwise the user will see custom tags as code (",(0,n.jsx)(a.code,{children:"<USERNAME/>"}),")."]})]}),"\n",(0,n.jsx)(a.h2,{id:"how-to-add-a-custom-tag-to-a-paywall",children:"How to add a custom tag to a paywall"}),"\n",(0,n.jsx)(a.p,{children:"Every text line you see in Paywall Builder can have one or more custom tags."}),"\n",(0,n.jsx)(a.p,{children:"To add a custom tag to a line:"}),"\n",(0,n.jsxs)(a.ol,{children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsxs)(a.p,{children:["Enter the custom tag you want in the format ",(0,n.jsx)(a.code,{children:"<CUSTOM_TAG/>"})," or simply type an opening angle bracket (<) in the text line followed by the custom tag you need. The system will then offer you the tag in the correct format."]}),"\n",(0,n.jsx)(a.p,{children:"Please pay attention that:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:["In the Adapty Paywall Builder, custom tags are wrapped in angle brackets (",(0,n.jsx)(a.code,{children:"<CUSTOM_TAG/>"}),") while in mobile app code, you should refer to them directly (",(0,n.jsx)(a.code,{children:"CUSTOM_TAG"}),")."]}),"\n",(0,n.jsx)(a.li,{children:"Custom tags are case-sensitive."}),"\n",(0,n.jsxs)(a.li,{children:["Custom tags can't overlap with any of the ",(0,n.jsx)(a.a,{href:"paywall-builder-tag-variables",children:"Tag Variables"})," reserved for product info in Adapty."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(l.A,{children:(0,n.jsx)("img",{src:t(36924).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,n.jsxs)(a.ol,{start:"2",children:["\n",(0,n.jsxs)(a.li,{children:["\n",(0,n.jsx)(a.p,{children:"After entering the custom tag, make sure to enter the fallback line. The fallback is the text displayed in your app if it does not know about a particular custom tag. This ensures that users won't see the custom tag as code; instead, they'll see the designated fallback text. Please note that the fallback replaces the entire line containing the custom tag"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(l.A,{children:(0,n.jsx)("img",{src:t(28446).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,n.jsx)(a.h2,{id:"how-to-use-custom-tags-in-your-mobile-app",children:"How to use custom tags in your mobile app"}),"\n",(0,n.jsxs)(a.p,{children:["To use custom tags in your mobile app, you need to create a ",(0,n.jsx)(a.code,{children:"tagResolver"})," object. This is a dictionary/map containing custom tags and the string values to replace them with when rendering the paywall in your app. Here's an example:"]}),"\n",(0,n.jsxs)(r.A,{groupId:"current-os",queryString:!0,children:[(0,n.jsx)(o.A,{value:"swift",label:"Swift",default:!0,children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-swift",metastring:'showLineNumbers title="Swift"',children:'let tagResolver = [\n    "USERNAME": "John",\n]                           \n'})})}),(0,n.jsx)(o.A,{value:"kotlin",label:"Kotlin",default:!0,children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-kotlin",metastring:'showLineNumbers title="Kotlin"',children:'val customTags = mapOf("USERNAME" to "John")\nval tagResolver = AdaptyUiTagResolver { tag -> customTags[tag] }\n'})})}),(0,n.jsx)(o.A,{value:"java",label:"Java",default:!0,children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-java",metastring:'showLineNumbers title="Java"',children:'Map<String, String> customTags = new HashMap<>();\ncustomTags.put("USERNAME", "John");\nAdaptyUiTagResolver tagResolver = customTags::get;\n'})})}),(0,n.jsx)(o.A,{value:"rn",label:"React Native",default:!0,children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-typescript",metastring:"showLineNumbers",children:'let customTags: Record<string, string> = { "USERNAME": "John" }\n//and then you can pass it to createPaywallView as follows:\nview = await createPaywallView(paywall, { customTags })\n'})})})]}),"\n",(0,n.jsxs)(a.p,{children:["In this example, ",(0,n.jsx)(a.code,{children:"USERNAME"})," is a custom tag that you entered in the Adapty dashboard while designing a paywall as ",(0,n.jsx)(a.code,{children:"<USERNAME/>"}),". The ",(0,n.jsx)(a.code,{children:"tagResolver"})," ensures that when your app encounters this custom tag, it dynamically replaces it with the specified value, in this case, ",(0,n.jsx)(a.code,{children:"John"}),"."]}),"\n",(0,n.jsxs)(a.p,{children:["We recommend to create and populate the ",(0,n.jsx)(a.code,{children:"tagResolver"})," right before presenting your paywall. Once it is created, pass it over to the AdaptyUI method used for presenting. Read more on how to present paywalls on ",(0,n.jsx)(a.a,{href:"ios-present-paywalls",children:"iOS"}),",  ",(0,n.jsx)(a.a,{href:"android-present-paywalls",children:"Android"}),", ",(0,n.jsx)(a.a,{href:"flutter-present-paywalls",children:"Flutter"}),", ",(0,n.jsx)(a.a,{href:"react-native-present-paywalls",children:"React Native"}),", or ",(0,n.jsx)(a.a,{href:"unity-present-paywalls",children:"Unity"}),"."]})]})}function m(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);