"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[2341],{11470:(e,t,r)=>{r.d(t,{A:()=>v});var n=r(96540),a=r(34164),s=r(23104),i=r(56347),l=r(205),o=r(57485),d=r(31682),c=r(70679);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:r}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}(r);return function(e){const t=(0,d.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function p(e){let{queryString:t=!1,groupId:r}=e;const a=(0,i.W6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,o.aZ)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})}),[s,a])]}function y(e){const{defaultValue:t,queryString:r=!1,groupId:a}=e,s=u(e),[i,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[d,h]=p({queryString:r,groupId:a}),[y,x]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Dv)(r);return[a,(0,n.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:a}),f=(()=>{const e=d??y;return m({value:e,tabValues:s})?e:null})();(0,l.A)((()=>{f&&o(f)}),[f]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),x(e)}),[h,x,s]),tabValues:s}}var x=r(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var w=r(74848);function j(e){let{className:t,block:r,selectedValue:n,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const t=e.currentTarget,r=o.indexOf(t),a=l[r].value;a!==n&&(d(t),i(a))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;t=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;t=o[r]??o[o.length-1];break}}t?.focus()};return(0,w.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},t),children:l.map((e=>{let{value:t,label:r,attributes:s}=e;return(0,w.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>o.push(e),onKeyDown:h,onClick:c,...s,className:(0,a.A)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":n===t}),children:r??t},t)}))})}function g(e){let{lazy:t,children:r,selectedValue:a}=e;const s=(Array.isArray(r)?r:[r]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return(0,w.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function b(e){const t=y(e);return(0,w.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,w.jsx)(j,{...t,...e}),(0,w.jsx)(g,{...t,...e})]})}function v(e){const t=(0,x.A)();return(0,w.jsx)(b,{...e,children:h(e.children)},String(t))}},11978:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/f1be626-timer_example-f9d67e83005fdc50db58ab4a5fa2066d.webp"},19365:(e,t,r)=>{r.d(t,{A:()=>i});r(96540);var n=r(34164);const a={tabItem:"tabItem_Ymn6"};var s=r(74848);function i(e){let{children:t,hidden:r,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)(a.tabItem,i),hidden:r,children:t})}},54466:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/87de83a-Timer_withou_text-8e4777f270dbf7f28c1387eb93e05a37.webp"},59468:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/e83e891-timer-39cfa5aa90d7526cad186dd3efa5a341.webp"},69449:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/timer-action-id-fdab644ff6d75fd3542c349ddabcbd76.webp"},73637:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/images/timer-action-on-5cf76e752becd864c3b6a4147849c485.webp"},96012:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=r(74848),a=r(28453),s=r(34028),i=(r(26393),r(11470)),l=r(19365);const o={title:"Paywall timer",description:"Use Adapty\u2019s paywall timer feature to increase conversions and create urgency.",metadataTitle:"Using Paywall Timer for Conversions | Adapty Docs"},d=void 0,c={id:"paywall-timer",title:"Paywall timer",description:"Use Adapty\u2019s paywall timer feature to increase conversions and create urgency.",source:"@site/versioned_docs/version-3.0/paywall-timer.md",sourceDirName:".",slug:"/paywall-timer",permalink:"/docs/paywall-timer",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Paywall timer",description:"Use Adapty\u2019s paywall timer feature to increase conversions and create urgency.",metadataTitle:"Using Paywall Timer for Conversions | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Paywall card",permalink:"/docs/paywall-card"},next:{title:"Paywall dark mode",permalink:"/docs/paywall-dark-mode"}},h={},u=[{value:"Timer mode",id:"timer-mode",level:2},{value:"What happens when the timer ends?",id:"what-happens-when-the-timer-ends",level:2},{value:"How to set up developer-defined timers in your mobile app?",id:"how-to-set-up-developer-defined-timers-in-your-mobile-app",level:2}];function m(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"The paywall timer is a great tool for promoting special and seasonal offers with a time limit. However, it's important to note that this timer isn't connected to the offer's validity or the campaign's duration. It's simply a standalone countdown that starts from the value you set and decreases to zero. When the timer reaches zero, nothing happens\u2014it just stays at zero."}),"\n",(0,n.jsx)(s.A,{children:(0,n.jsx)("img",{src:r(54466).A,style:{border:"none",width:"200px",display:"block",margin:"0 auto"}})}),"\n",(0,n.jsx)(t.admonition,{type:"warning",children:(0,n.jsxs)(t.p,{children:["Paywall timers are only available in the ",(0,n.jsx)(t.a,{href:"adapty-paywall-builder",children:"new Paywall Builder"}),", which works with iOS, Android, and React Native SDKs version 3.0 or higher, and Flutter and Unity SDKs version 3.3.0 or higher. The legacy Paywall Builder with Adapty SDK v2.x or earlier does not support paywall timer functionality."]})}),"\n",(0,n.jsx)(t.p,{children:'You can customize the text before and after the timer to create the desired message, such as: "Offer ends in: 10:00 sec."'}),"\n",(0,n.jsx)(s.A,{children:(0,n.jsx)("img",{src:r(11978).A,style:{border:"none",width:"200px",display:"block",margin:"0 auto"}})}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Add a timer as a separate element to a paywall or to another paywall element, like a card."}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Configure the timer's settings: format and separator, start value, text before and after (if needed), color, font, spacing, etc."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.A,{children:(0,n.jsx)("img",{src:r(59468).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,n.jsx)(t.h2,{id:"timer-mode",children:"Timer mode"}),"\n",(0,n.jsxs)(t.p,{children:["You can control how the timer behaves when users see it by using the ",(0,n.jsx)(t.strong,{children:"Timer mode"})," parameter. 3 standard modes work out of the box\u2014just select the required option from the dropdown list:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Mode"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Reset timer on every paywall view"})}),(0,n.jsx)(t.td,{children:"The timer resets every time the user sees the paywall, starting from the initial value each time."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Reset timer on every app launch"})}),(0,n.jsx)(t.td,{children:"The timer starts the first time the user sees the paywall and keeps counting in the foreground or background until the app is restarted. If the user sees the paywall multiple times in the same session, they\u2019ll see the same timer counting down. Once the app is closed, the timer resets, and the next time the app is opened, the timer restarts from the beginning."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Keep timer across app launches"})}),(0,n.jsx)(t.td,{children:"The timer starts the first time the user sees the paywall and keeps counting in the foreground or background, even if the app is closed. The user will see the same timer every time they return to the paywall, regardless of app or paywall restarts."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Developer defined"})}),(0,n.jsxs)(t.td,{children:["You can set up any timer you need directly in your mobile app code. Start by entering a ",(0,n.jsx)(t.strong,{children:"Timer ID"}),", then use it in your code as explained in the ",(0,n.jsx)(t.a,{href:"paywall-timer#how-to-set-up-developer-defined-timers-in-your-mobile-app",children:"How to set up developer-defined timers in your mobile app"})," section to configure the timer however you like."]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"what-happens-when-the-timer-ends",children:"What happens when the timer ends?"}),"\n",(0,n.jsx)(t.p,{children:"You can customize what happens when the timer runs out. Should it display another screen with a new opportunity? Or maybe show a different paywall? It requires some coding, but with our docs, you'll handle it."}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Turn on the ",(0,n.jsx)(t.strong,{children:"Trigger custom action when the timer runs out"})," toggle."]}),"\n",(0,n.jsx)(s.A,{children:(0,n.jsx)("img",{src:r(73637).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Enter the ID of the action you want to trigger in the ",(0,n.jsx)(t.strong,{children:"Timer action ID"})," field."]}),"\n",(0,n.jsx)(s.A,{children:(0,n.jsx)("img",{src:r(69449).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["Use this action ID in your app to define what should happen when the timer ends. Treat it like any other custom action, as explained in our ",(0,n.jsx)(t.strong,{children:"Handling Events: Actions"})," guide for ",(0,n.jsx)(t.a,{href:"ios-handling-events#actions",children:"iOS"})," and ",(0,n.jsx)(t.a,{href:"android-handling-events#actions",children:"Android"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"how-to-set-up-developer-defined-timers-in-your-mobile-app",children:"How to set up developer-defined timers in your mobile app?"}),"\n",(0,n.jsxs)(t.p,{children:["To use custom timers in your mobile app, create an object that follows the ",(0,n.jsx)(t.code,{children:"AdaptyTimerResolver"})," protocol. This object defines how each custom timer should be rendered. If you prefer, you can use a ",(0,n.jsx)(t.code,{children:"[String: Date]"})," dictionary directly, as it already conforms to this protocol. Here is an example:"]}),"\n",(0,n.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,n.jsxs)(l.A,{value:"swift",label:"Swift",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Swift",metastring:"showLineNumbers",children:'@MainActor\nstruct AdaptyTimerResolverImpl: AdaptyTimerResolver {\n    func timerEndAtDate(for timerId: String) -> Date {\n        switch timerId {\n        case "CUSTOM_TIMER_6H":\n            Date(timeIntervalSinceNow: 3600.0 * 6.0) // 6 hours\n        case "CUSTOM_TIMER_NY":\n            Calendar.current.date(from: DateComponents(year: 2025, month: 1, day: 1)) ?? Date(timeIntervalSinceNow: 3600.0)\n        default:\n            Date(timeIntervalSinceNow: 3600.0) // 1 hour\n        }\n    }\n}\n'})}),(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"})," and ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_6H"})," are the ",(0,n.jsx)(t.strong,{children:"Timer ID"}),"s of developer-defined timers you set in the Adapty Dashboard. The ",(0,n.jsx)(t.code,{children:"timerResolver"})," ensures your app dynamically updates each timer with the correct value. For example:"]}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"}),": The time remaining until the timer\u2019s end, such as New Year\u2019s Day."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_6H"}),": The time left in a 6-hour period that started when the user opened the paywall."]}),"\n"]})]}),(0,n.jsxs)(l.A,{value:"kotlin",label:"Kotlin",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",metastring:"showLineNumbers",children:'import java.util.Calendar\nimport java.util.Date\nimport java.util.TimeZone\n\n...\n\nval customTimers = mapOf(\n    "CUSTOM_TIMER_NY" to Calendar.getInstance(TimeZone.getDefault()).apply { set(2025, 0, 1) }.time, // New Year 2025\n)\nval timerResolver = AdaptyUiTimerResolver { timerId ->\n    customTimers.getOrElse(timerId, { Date(System.currentTimeMillis() + 3600 * 1000L) /* in 1 hour */ } )\n}\n'})}),(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"})," is the ",(0,n.jsx)(t.strong,{children:"Timer ID"})," of the developer-defined timer you set in the Adapty dashboard. The ",(0,n.jsx)(t.code,{children:"timerResolver"})," ensures your app dynamically updates the timer with the correct value\u2014like ",(0,n.jsx)(t.code,{children:"13d 09h 03m 34s"})," (calculated as the timer\u2019s end time, such as New Year\u2019s Day, minus the current time)."]})]}),(0,n.jsxs)(l.A,{value:"java",label:"Java",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-JAVA",metastring:"showLineNumbers",children:'import java.util.Calendar;\nimport java.util.Date;\nimport java.util.TimeZone;\n\n...\n\nMap<String, Date> customTimers = new HashMap<>();\ncustomTimers.put(\n        "CUSTOM_TIMER_NY",\n        new Calendar.Builder().setTimeZone(TimeZone.getDefault()).setDate(2025, 0, 1).build().getTime()\n);\nAdaptyUiTimerResolver timerResolver = new AdaptyUiTimerResolver() {\n    @NonNull\n    @Override\n    public Date timerEndAtDate(@NonNull String timerId) {\n        Date date = customTimers.get(timerId);\n        return date != null ? date : new Date(System.currentTimeMillis() + 3600 * 1000L); /* in 1 hour */\n    }\n};\n'})}),(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"})," is the ",(0,n.jsx)(t.strong,{children:"Timer ID"})," of the developer-defined timer you set in the Adapty dashboard. The ",(0,n.jsx)(t.code,{children:"timerResolver"})," ensures your app dynamically updates the timer with the correct value\u2014like ",(0,n.jsx)(t.code,{children:"13d 09h 03m 34s"})," (calculated as the timer\u2019s end time, such as New Year\u2019s Day, minus the current time)."]})]}),(0,n.jsxs)(l.A,{value:"flutter",label:"Flutter",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",metastring:"showLineNumbers",children:"try {\n      final view = await AdaptyUI().createPaywallView(\n        paywall: paywall,\n        customTags: ...,\n        customTimers: {\n          'CUSTOM_TIMER_6H': DateTime.now().add(const Duration(seconds: 3600 * 6)),\n          'CUSTOM_TIMER_NY': DateTime(2025, 1, 1), // New Year 2025\n        },\n        preloadProducts: ...,\n      );\n    } on AdaptyError catch (e) {\n      // handle the error\n    } catch (e) {\n      // handle the error\n    }\n"})}),(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"})," and ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_6H"})," are the ",(0,n.jsx)(t.strong,{children:"Timer ID"}),"s of developer-defined timers you set in the Adapty Dashboard. The ",(0,n.jsx)(t.code,{children:"timerResolver"})," ensures your app dynamically updates each timer with the correct value. For example:"]}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"}),": The time remaining until the timer\u2019s end, such as New Year\u2019s Day."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_6H"}),": The time left in a 6-hour period that started when the user opened the paywall."]}),"\n"]})]}),(0,n.jsxs)(l.A,{value:"unity",label:"Unity (C#)",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers",children:'var parameters = new AdaptyUICreateViewParameters()\n  .SetCustomTimers(\n    new Dictionary<string, DateTime> {\n      { "CUSTOM_TIMER_6H", DateTime.Now.AddHours(6) }, // 6 hours\n      { "CUSTOM_TIMER_NY", new DateTime(2025, 1, 1) } // New Year 2025\n    }\n  )\n\nAdaptyUI.CreateView(paywall, parameters, (view, error) => {\n  // handle the result\n});\n'})}),(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"})," and ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_6H"})," are the ",(0,n.jsx)(t.strong,{children:"Timer ID"}),"s of developer-defined timers you set in the Adapty Dashboard. The ",(0,n.jsx)(t.code,{children:"timerResolver"})," ensures your app dynamically updates each timer with the correct value. For example:"]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"}),": The time remaining until the timer\u2019s end, such as New Year\u2019s Day."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_6H"}),": The time left in a 6-hour period that started when the user opened the paywall."]}),"\n"]}),"\n"]})]}),(0,n.jsxs)(l.A,{value:"rn",label:"React Native (TS)",default:!0,children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"let timerInfo = { 'CUSTOM_TIMER_NY': new Date(2025, 0, 1) }\n//and then you can pass it to createPaywallView as follows:\nview = await createPaywallView(paywall, { timerInfo })\n"})}),(0,n.jsxs)(t.p,{children:["In this example, ",(0,n.jsx)(t.code,{children:"CUSTOM_TIMER_NY"})," is the ",(0,n.jsx)(t.strong,{children:"Timer ID"})," of the developer-defined timer you set in the Adapty dashboard. The ",(0,n.jsx)(t.code,{children:"timerResolver"})," ensures your app dynamically updates the timer with the correct value\u2014like ",(0,n.jsx)(t.code,{children:"13d 09h 03m 34s"})," (calculated as the timer\u2019s end time, such as New Year\u2019s Day, minus the current time)."]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);