"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[4172],{4058:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/49f4aa7-CleanShot_2023-08-11_at_17.36.072x-8adf52c6ff633f3693f1b1f6cb2cc48a.webp"},11470:(e,t,n)=>{n.d(t,{A:()=>A});var a=n(96540),r=n(34164),s=n(23104),i=n(56347),o=n(205),l=n(57485),c=n(31682),d=n(70679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}(n);return function(e){const t=(0,c.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(r.location.search);t.set(s,e),r.replace({...r.location,search:t.toString()})}),[s,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,s=h(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s}))),[c,u]=b({queryString:n,groupId:r}),[f,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,s]=(0,d.Dv)(n);return[r,(0,a.useCallback)((e=>{n&&s.set(e)}),[n,s])]}({groupId:r}),m=(()=>{const e=c??f;return p({value:e,tabValues:s})?e:null})();(0,o.A)((()=>{m&&l(m)}),[m]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=n(92303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(74848);function v(e){let{className:t,block:n,selectedValue:a,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,s.a_)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),r=o[n].value;r!==a&&(c(t),i(r))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t),children:o.map((e=>{let{value:t,label:n,attributes:s}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>l.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",m.tabItem,s?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function x(e){let{lazy:t,children:n,selectedValue:r}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function j(e){const t=f(e);return(0,y.jsxs)("div",{className:(0,r.A)("tabs-container",m.tabList),children:[(0,y.jsx)(v,{...t,...e}),(0,y.jsx)(x,{...t,...e})]})}function A(e){const t=(0,g.A)();return(0,y.jsx)(j,{...e,children:u(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>i});n(96540);var a=n(34164);const r={tabItem:"tabItem_Ymn6"};var s=n(74848);function i(e){let{children:t,hidden:n,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:n,children:t})}},33830:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/817a051-CleanShot_2023-08-11_at_15.54.372x-9091d0504f9da2fdfec8ef9c08e62612.webp"},81567:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/130e58b-CleanShot_2023-08-11_at_15.24.162x-22c71f9b48e431371915277bc36c85b5.webp"},83786:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/a645cf8-CleanShot_2023-08-11_at_15.18.282x-7a21eb5a79f443f217b192f200595052.webp"},91524:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>b,frontMatter:()=>l,metadata:()=>d,toc:()=>h});var a=n(74848),r=n(28453),s=n(34028),i=(n(26393),n(11470)),o=n(19365);const l={title:"Branch",description:"Integrate Branch with Adapty to track deep links and app conversions.",metadataTitle:"Branch Integration for Subscription Tracking | Adapty Docs"},c=void 0,d={id:"branch",title:"Branch",description:"Integrate Branch with Adapty to track deep links and app conversions.",source:"@site/versioned_docs/version-3.0/branch.md",sourceDirName:".",slug:"/branch",permalink:"/test_assignment_adapty/docs/branch",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Branch",description:"Integrate Branch with Adapty to track deep links and app conversions.",metadataTitle:"Branch Integration for Subscription Tracking | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Asapty",permalink:"/test_assignment_adapty/docs/asapty"},next:{title:"Facebook Ads",permalink:"/test_assignment_adapty/docs/facebook-ads"}},u={},h=[{value:"How to set up Branch integration",id:"how-to-set-up-branch-integration",level:2},{value:"Events and tags",id:"events-and-tags",level:2},{value:"SDK configuration",id:"sdk-configuration",level:2}];function p(e){const t={a:"a",br:"br",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://www.branch.io/",children:"Branch"})," enables customers to reach, interact, and assess results across diverse devices, channels, and platforms. It's a user-friendly platform designed to enhance mobile revenue through specialized links that work seamlessly on all devices, channels, and platforms."]}),"\n",(0,a.jsxs)(t.p,{children:["Adapty provides a complete set of data that lets you track ",(0,a.jsx)(t.a,{href:"events",children:"subscription events"})," from stores in one place. With Adapty, you can easily see how your subscribers are behaving, learn what they like, and use that information to communicate with them in a way that's targeted and effective."]}),"\n",(0,a.jsx)(t.p,{children:"The integration between Adapty and Branch operates in two main ways."}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Receiving attribution data from Branch"}),(0,a.jsx)(t.br,{}),"\n","Once you've set up the Branch integration, Adapty will start receiving attribution data from Branch. You can easily access and view this data on the user's profile page."]}),"\n"]}),"\n",(0,a.jsx)(s.A,{children:(0,a.jsx)("img",{src:n(4058).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,a.jsxs)(t.ol,{start:"2",children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Sending subscription events to Branch"}),(0,a.jsx)(t.br,{}),"\n","Adapty can send all subscription events which are configured in your integration to Branch. As a result, you'll be able to track these events within the Branch dashboard."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"how-to-set-up-branch-integration",children:"How to set up Branch integration"}),"\n",(0,a.jsxs)(t.p,{children:["To integrate Branch go to ",(0,a.jsx)(t.a,{href:"https://app.adapty.io/integrations/branch",children:"Integrations > Branch"})," in Adapty Dashboard , turn on a toggle from off to on, and fill out fields."]}),"\n",(0,a.jsx)(s.A,{children:(0,a.jsx)("img",{src:n(33830).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,a.jsxs)(t.p,{children:["To get the value for the ",(0,a.jsx)(t.strong,{children:"Branch Key"}),",  open your Branch ",(0,a.jsx)(t.a,{href:"https://dashboard.branch.io/account-settings/profile",children:"Account Settings"})," and find the ",(0,a.jsx)(t.strong,{children:"Branch Key"})," field. Use it for the ",(0,a.jsx)(t.strong,{children:"Key test"})," (for Sandbox) or ",(0,a.jsx)(t.strong,{children:"Key live"})," (fo Production) field in the Adapty Dashboard. In Branch, switch between Live and Tests environments for the appropriate key."]}),"\n",(0,a.jsx)(s.A,{children:(0,a.jsx)("img",{src:n(81567).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,a.jsx)(t.h2,{id:"events-and-tags",children:"Events and tags"}),"\n",(0,a.jsxs)(t.p,{children:["Below the credentials, there are three groups of events you can send to Branch from Adapty. Simply turn on the ones you need. Check the full list of the events offered by Adapty ",(0,a.jsx)(t.a,{href:"events",children:"here"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"You can send an event with Proceeds (after Apple/Google cut) or just revenue. Also, you can check a box for reporting in the user's currency."}),"\n",(0,a.jsx)(s.A,{children:(0,a.jsx)("img",{src:n(83786).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,a.jsx)(t.p,{children:"We recommend using the default event names provided by Adapty. But you can change the event names based on your needs."}),"\n",(0,a.jsx)(t.p,{children:"Adapty will send subscription events to Branch using a server-to-server integration, allowing you to view all subscription events in your Branch dashboard and link them to your acquisition campaigns."}),"\n",(0,a.jsx)(t.h2,{id:"sdk-configuration",children:"SDK configuration"}),"\n",(0,a.jsxs)(t.p,{children:["It's very important to send Branch attribution data from the device to Adapty using ",(0,a.jsx)(t.code,{children:".setIntegrationIdentifier()"})," SDK method. The example below shows how to do that."]}),"\n",(0,a.jsxs)(t.p,{children:["To connect the Branch and Adapty user, make sure you provide your ",(0,a.jsx)(t.code,{children:"customerUserId"})," to Branch. If you prefer not to use ",(0,a.jsx)(t.code,{children:"customerUserId"})," in Branch, use the `setIntegrationIdentifier method to specify the Branch user ID."]}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(o.A,{value:"swift",label:"iOS (Swift)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-swift",metastring:"showLineNumbers",children:'do {\n    try await Adapty.setIntegrationIdentifier(\n        key: "branch_id", \n        value: <BRANCH_IDENTITY_ID>\n    )\n} catch {\n    // handle the error\n}\n'})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Android (Kotlin)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-kotlin",metastring:"showLineNumbers",children:'// login and update attribution and identifier\nBranch.getAutoInstance(this)\n    .setIdentity("YOUR_USER_ID") { referringParams, error ->\n        referringParams?.let { data ->\n            Adapty.updateAttribution(data, "branch") { error ->\n                if (error != null) {\n                    //handle the error\n                }\n            }\n        }\n    }\n\n// logout\nBranch.getAutoInstance(context).logout()\n'})})}),(0,a.jsx)(o.A,{value:"flutter",label:"Flutter",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",metastring:"showLineNumbers",children:"import 'package:flutter_branch_sdk/flutter_branch_sdk.dart';\n\nFlutterBranchSdk.setIdentity('YOUR_USER_ID');\n"})})}),(0,a.jsx)(o.A,{value:"unity",label:"Unity (C#)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers",children:'Branch.setIdentity("your user id");\n'})})}),(0,a.jsx)(o.A,{value:"rn",label:"React Native (TS)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"import branch from 'react-native-branch';\n\nbranch.setIdentity('YOUR_USER_ID');\n"})})})]}),"\n",(0,a.jsx)(t.p,{children:"Next, pass the attribution you receive from the initializing method of Branch iOS SDK to Adapty."}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(o.A,{value:"swift",label:"iOS (Swift)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-swift",metastring:"showLineNumbers",children:"class YourBranchImplementation {\n    func initializeBranch() {\n        // Pass the attribution you receive from the initializing method of Branch iOS SDK to Adapty.\n        Branch.getInstance().initSession(launchOptions: launchOptions) { (data, error) in\n            if let data {\n                Adapty.updateAttribution(data, source: .branch)\n            }\n        }\n    }\n}\n\n"})})}),(0,a.jsx)(o.A,{value:"kotlin",label:"Android (Kotlin)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-kotlin",metastring:"showLineNumbers",children:"//everything is in the above snippet for Android\n"})})}),(0,a.jsx)(o.A,{value:"flutter",label:"Flutter (Dart)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",metastring:"showLineNumbers",children:'try {\n    await Adapty().setIntegrationIdentifier(\n        key: "branch_id", \n        value: <BRANCH_IDENTITY_ID>,\n    );\n} on AdaptyError catch (adaptyError) {\n    // handle the error\n} catch (e) {\n    // handle the error\n}\n'})})}),(0,a.jsx)(o.A,{value:"unity",label:"Unity (C#)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers",children:'using AdaptySDK;\n\nBranch.initSession(delegate(Dictionary<string, object> parameters, string error) {\n    string attributionString = JsonUtility.ToJson(parameters);\n    \n    Adapty.UpdateAttribution(\n      attributionString, \n      "branch", \n      (error) => {\n        // handle the error\n    });\n});\n'})})}),(0,a.jsx)(o.A,{value:"rn",label:"React Native (TS)",default:!0,children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"import { adapty, AttributionSource } from 'react-native-adapty';\nimport branch from 'react-native-branch';\n\nbranch.subscribe({\n  enComplete: ({\n    params,\n  }) => {\n    adapty.updateAttribution(params, \"branch\");\n  },\n});\n"})})})]})]})}function b(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);