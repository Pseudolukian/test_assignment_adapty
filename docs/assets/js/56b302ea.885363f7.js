"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[6355],{11470:(e,a,t)=>{t.d(a,{A:()=>_});var r=t(96540),n=t(34164),i=t(23104),s=t(56347),l=t(205),o=t(57485),c=t(31682),d=t(70679);function p(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:a,children:t}=e;return(0,r.useMemo)((()=>{const e=a??function(e){return p(e).map((e=>{let{props:{value:a,label:t,attributes:r,default:n}}=e;return{value:a,label:t,attributes:r,default:n}}))}(t);return function(e){const a=(0,c.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function h(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function m(e){let{queryString:a=!1,groupId:t}=e;const n=(0,s.W6)(),i=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,o.aZ)(i),(0,r.useCallback)((e=>{if(!i)return;const a=new URLSearchParams(n.location.search);a.set(i,e),n.replace({...n.location,search:a.toString()})}),[i,n])]}function g(e){const{defaultValue:a,queryString:t=!1,groupId:n}=e,i=u(e),[s,o]=(0,r.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!h({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:i}))),[c,p]=m({queryString:t,groupId:n}),[g,f]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[n,i]=(0,d.Dv)(t);return[n,(0,r.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:n}),b=(()=>{const e=c??g;return h({value:e,tabValues:i})?e:null})();(0,l.A)((()=>{b&&o(b)}),[b]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),p(e),f(e)}),[p,f,i]),tabValues:i}}var f=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function x(e){let{className:a,block:t,selectedValue:r,selectValue:s,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const a=e.currentTarget,t=o.indexOf(a),n=l[t].value;n!==r&&(c(a),s(n))},p=e=>{let a=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;a=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;a=o[t]??o[o.length-1];break}}a?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":t},a),children:l.map((e=>{let{value:a,label:t,attributes:i}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:r===a?0:-1,"aria-selected":r===a,ref:e=>o.push(e),onKeyDown:p,onClick:d,...i,className:(0,n.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":r===a}),children:t??a},a)}))})}function y(e){let{lazy:a,children:t,selectedValue:n}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(a){const e=i.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==n})))})}function A(e){const a=g(e);return(0,v.jsxs)("div",{className:(0,n.A)("tabs-container",b.tabList),children:[(0,v.jsx)(x,{...a,...e}),(0,v.jsx)(y,{...a,...e})]})}function _(e){const a=(0,f.A)();return(0,v.jsx)(A,{...e,children:p(e.children)},String(a))}},19365:(e,a,t)=>{t.d(a,{A:()=>s});t(96540);var r=t(34164);const n={tabItem:"tabItem_Ymn6"};var i=t(74848);function s(e){let{children:a,hidden:t,className:s}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,r.A)(n.tabItem,s),hidden:t,children:a})}},66735:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/6ed2d88-CleanShot_2023-08-18_at_14.59.042x-25fc00ec553ecefb6942b10e69ca88d9.webp"},69903:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/2500769-CleanShot_2023-08-18_at_14.57.352x-8b4bbdd8ebf31f1c76c463b2ba59d99b.webp"},71686:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var r=t(74848),n=t(28453),i=t(34028),s=(t(26393),t(11470)),l=t(19365);const o={title:"AppMetrica",description:"Integrate AppMetrica with Adapty for in-depth subscription analytics.",metadataTitle:"AppMetrica Integration | Adapty Docs"},c=void 0,d={id:"appmetrica",title:"AppMetrica",description:"Integrate AppMetrica with Adapty for in-depth subscription analytics.",source:"@site/versioned_docs/version-3.0/appmetrica.md",sourceDirName:".",slug:"/appmetrica",permalink:"/docs/appmetrica",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"AppMetrica",description:"Integrate AppMetrica with Adapty for in-depth subscription analytics.",metadataTitle:"AppMetrica Integration | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Amplitude",permalink:"/docs/amplitude"},next:{title:"Firebase and Google Analytics",permalink:"/docs/firebase-and-google-analytics"}},p={},u=[{value:"How to set up AppMetrica integration",id:"how-to-set-up-appmetrica-integration",level:2},{value:"Dashboard Configuration",id:"dashboard-configuration",level:3},{value:"Events and tags",id:"events-and-tags",level:3},{value:"SDK configuration",id:"sdk-configuration",level:3}];function h(e){const a={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.a,{href:"https://appmetrica.yandex.ru/en/about",children:"AppMetrica"})," is a no-cost tool that helps you track advertisements and analyze how your mobile app is doing. It works in real time, so you see things right away."]}),"\n",(0,r.jsx)(a.h2,{id:"how-to-set-up-appmetrica-integration",children:"How to set up AppMetrica integration"}),"\n",(0,r.jsx)(a.p,{children:"AppMetrica integration configuration is comprised of two major steps:"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsx)(a.li,{children:"Enable the integration in the Adapty Dashboard."}),"\n",(0,r.jsx)(a.li,{children:"Configure the integration in your app\u2019s code."}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"dashboard-configuration",children:"Dashboard Configuration"}),"\n",(0,r.jsxs)(a.p,{children:["To integrate AppMetrica go to ",(0,r.jsx)(a.a,{href:"https://app.adapty.io/integrations/appmetrica",children:"Integrations > AppMetrica"})," and set credentials."]}),"\n",(0,r.jsx)(i.A,{children:(0,r.jsx)("img",{src:t(69903).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,r.jsxs)(a.p,{children:["Open AppMetrica ",(0,r.jsx)(a.a,{href:"https://appmetrica.yandex.ru/application/list",children:"apps list"}),". Choose the app you want to send events to and go to ",(0,r.jsx)(a.strong,{children:"Settings"}),". Copy ",(0,r.jsx)(a.strong,{children:"Application ID"})," and ",(0,r.jsx)(a.strong,{children:"Post API key"})," and use them to set up the integration in Adapty."]}),"\n",(0,r.jsx)(i.A,{children:(0,r.jsx)("img",{src:t(82414).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,r.jsx)(a.p,{children:"AppMetrica syncs events every 4 hours, so it may take some time for events to appear in the dashboard. AppMetrica doesn't support sending events revenue, but we send it as regular property."}),"\n",(0,r.jsx)(a.h3,{id:"events-and-tags",children:"Events and tags"}),"\n",(0,r.jsxs)(a.p,{children:["Below the credentials, there are three groups of events you can send to AppMetrics from Adapty. Simply turn on the ones you need. Check the full list of the events offered by Adapty ",(0,r.jsx)(a.a,{href:"events",children:"here"}),"."]}),"\n",(0,r.jsx)(i.A,{children:(0,r.jsx)("img",{src:t(66735).A,style:{border:"1px solid #727272",width:"700px",display:"block",margin:"0 auto"}})}),"\n",(0,r.jsx)(a.p,{children:"We recommend using the default event names provided by Adapty. But you can change the event names based on your needs."}),"\n",(0,r.jsx)(a.h3,{id:"sdk-configuration",children:"SDK configuration"}),"\n",(0,r.jsxs)(a.p,{children:["Use the ",(0,r.jsx)(a.code,{children:"setIntegrationIdentifier()"})," method to set the ",(0,r.jsx)(a.code,{children:"appmetrica_device_id"})," parameter. This is required to enable the integration."]}),"\n",(0,r.jsxs)(a.p,{children:["If your app has user registration, you can also pass ",(0,r.jsx)(a.code,{children:"appmetrica_profile_id"}),"."]}),"\n",(0,r.jsxs)(s.A,{groupId:"current-os",queryString:!0,children:[(0,r.jsxs)(l.A,{value:"Swift",label:"iOS (Swift)",default:!0,children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_device_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-swift",metastring:"showLineNumbers",children:'val startupParamsCallback = object: StartupParamsCallback {\n    override fun onReceive(result: StartupParamsCallback.Result?) {\n        val deviceIdHash = result?.deviceIdHash ?: return\n\n        Adapty.setIntegrationIdentifier("appmetrica_device_id", deviceIdHash) { error ->\n            if (error != null) {\n                // handle the error\n            }\n        }\n    }\n\n    override fun onRequestError(\n        reason: StartupParamsCallback.Reason,\n        result: StartupParamsCallback.Result?\n    ) {\n        //handle the error\n    }\n}\n\nAppMetrica.requestStartupParams(context, startupParamsCallback, listOf(StartupParamsCallback.APPMETRICA_DEVICE_ID_HASH))\n'})}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_profile_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-swift",metastring:"showLineNumbers",children:'do {\n  try await Adapty.setIntegrationIdentifier(\n    key: "appmetrica_profile_id",\n    value: "YOUR_APPMETRICA_PROFILE_ID"\n  )\n} catch {\n  // handle the error\n}\n'})})]}),(0,r.jsxs)(l.A,{value:"kotlin",label:"Android (Kotlin)",default:!0,children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_device_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-kotlin",metastring:"showLineNumbers ",children:'val startupParamsCallback = object: StartupParamsCallback {\n    override fun onReceive(result: StartupParamsCallback.Result?) {\n        val deviceIdHash = result?.deviceIdHash ?: return\n\n        Adapty.setIntegrationIdentifier("appmetrica_device_id", deviceIdHash) { error ->\n            if (error != null) {\n                // handle the error\n            }\n        }\n    }\n\n    override fun onRequestError(\n        reason: StartupParamsCallback.Reason,\n        result: StartupParamsCallback.Result?\n    ) {\n        //handle the error\n    }\n}\n\nAppMetrica.requestStartupParams(context, startupParamsCallback, listOf(StartupParamsCallback.APPMETRICA_DEVICE_ID_HASH))\n'})}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_profile_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-kotlin",metastring:"showLineNumbers",children:'val startupParamsCallback = object: StartupParamsCallback {\n    override fun onReceive(result: StartupParamsCallback.Result?) {\n        val deviceIdHash = result?.deviceIdHash ?: return\n\n        Adapty.setIntegrationIdentifier("appmetrica_device_id", deviceIdHash) { error ->\n            if (error != null) {\n                // handle the error\n            }\n        }\n        \n        Adapty.setIntegrationIdentifier("appmetrica_profile_id", "YOUR_ADAPTY_CUSTOMER_USER_ID") { error ->\n            if (error != null) {\n                // handle the error\n            }\n        }\n    }\n\n    override fun onRequestError(\n        reason: StartupParamsCallback.Reason,\n        result: StartupParamsCallback.Result?\n    ) {\n        //handle the error\n    }\n}\n\nAppMetrica.requestStartupParams(context, startupParamsCallback, listOf(StartupParamsCallback.APPMETRICA_DEVICE_ID_HASH))\n'})})]}),(0,r.jsxs)(l.A,{value:"Flutter",label:"Flutter (Dart)",default:!0,children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_device_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:"showLineNumbers",children:"import 'package:appmetrica_plugin/appmetrica_plugin.dart';\n\nfinal startupParams = await AppMetrica.requestStartupParams([AppMetricaStartupParams.deviceIdHashKey]);\nfinal deviceIdHash = startupParams.result?.deviceIdHash;\n\nif (deviceIdHash != null) {\n  try {\n    await Adapty().setIntegrationIdentifier(\n        key: \"appmetrica_device_id\", \n        value: deviceIdHash,\n    );\n  } on AdaptyError catch (adaptyError) {\n    // handle the error\n  } catch (e) {\n    // handle the error\n  }\n}\n"})}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_profile_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-javascript",metastring:"showLineNumbers",children:'import \'package:appmetrica_plugin/appmetrica_plugin.dart\';\n\ntry {\n    await Adapty().setIntegrationIdentifier(\n        key: "appmetrica_profile_id", \n        value: "YOUR_APPMETRICA_PROFILE_ID",\n    );\n} on AdaptyError catch (adaptyError) {\n    // handle the error\n} catch (e) {\n    // handle the error\n}\n'})})]}),(0,r.jsxs)(l.A,{value:"Unity",label:"Unity (C#)",default:!0,children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_device_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers",children:'using AdaptySDK;\nusing Io.AppMetrica;\n\nAppMetrica.RequestStartupParams(\n    (result, errorReason) => {\n        string deviceIdHash = result.DeviceIdHash;\n\n        if (deviceIdHash != null) {\n            Adapty.SetIntegrationIdentifier(\n                "appmetrica_device_id",\n                deviceIdHash,\n                (error) => {\n                    // handle the error\n                });\n          }\n      },\n      new List<string>() { StartupParamsKey.AppMetricaDeviceIDHash }\n);\n'})}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_profile_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers",children:'Adapty.SetIntegrationIdentifier(\n  "appmetrica_profile_id",\n  "YOUR_APPMETRICA_PROFILE_ID",\n  (error) => {\n    // handle the error\n});\n'})})]}),(0,r.jsxs)(l.A,{value:"RN",label:"React Native (TS)",default:!0,children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_device_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",metastring:"showLineNumbers",children:"import { adapty } from 'react-native-adapty';\nimport AppMetrica, { DEVICE_ID_HASH_KEY, StartupParams, StartupParamsReason } from '@appmetrica/react-native-analytics';\n\n// ...\nconst startupParamsCallback = async (\n  params?: StartupParams,\n  reason?: StartupParamsReason\n) => {\n  const deviceIdHash = params?.deviceIdHash\n  if (deviceIdHash) {\n    try {\n      await adapty.setIntegrationIdentifier(\"appmetrica_device_id\", deviceIdHash);\n    } catch (error) {\n      // handle `AdaptyError`\n    }\n  }\n}\n\nAppMetrica.requestStartupParams(startupParamsCallback, [DEVICE_ID_HASH_KEY])\n"})}),(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Setting appmetrica_profile_id"})}),(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-typescript",metastring:"showLineNumbers",children:"import { adapty } from 'react-native-adapty';\n\ntry {\n  await adapty.setIntegrationIdentifier(\"appmetrica_profile_id\", 'YOUR_ADAPTY_CUSTOMER_USER_ID');\n} catch (error) {\n  // handle `AdaptyError`\n}\n"})})]})]})]})}function m(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},82414:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/0f09ff5-CleanShot_2023-08-18_at_19.56.422x-d10ab7311a60d2ff4ab9fba5480b878c.webp"}}]);