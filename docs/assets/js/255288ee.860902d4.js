"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[2979],{11470:(e,n,r)=>{r.d(n,{A:()=>j});var a=r(96540),t=r(34164),i=r(23104),l=r(56347),s=r(205),o=r(57485),d=r(31682),c=r(70679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:r}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:r,attributes:a,default:t}}=e;return{value:n,label:r,attributes:a,default:t}}))}(r);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:r}=e;const t=(0,l.W6)(),i=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,o.aZ)(i),(0,a.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(t.location.search);n.set(i,e),t.replace({...t.location,search:n.toString()})}),[i,t])]}function g(e){const{defaultValue:n,queryString:r=!1,groupId:t}=e,i=p(e),[l,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=r.find((e=>e.default))??r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:i}))),[d,u]=f({queryString:r,groupId:t}),[g,m]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[t,i]=(0,c.Dv)(r);return[t,(0,a.useCallback)((e=>{r&&i.set(e)}),[r,i])]}({groupId:t}),b=(()=>{const e=d??g;return h({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{b&&o(b)}),[b]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,i]),tabValues:i}}var m=r(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var A=r(74848);function y(e){let{className:n,block:r,selectedValue:a,selectValue:l,tabValues:s}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const n=e.currentTarget,r=o.indexOf(n),t=s[r].value;t!==a&&(d(n),l(t))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;n=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;n=o[r]??o[o.length-1];break}}n?.focus()};return(0,A.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":r},n),children:s.map((e=>{let{value:n,label:r,attributes:i}=e;return(0,A.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:u,onClick:c,...i,className:(0,t.A)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":a===n}),children:r??n},n)}))})}function v(e){let{lazy:n,children:r,selectedValue:t}=e;const i=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===t));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,A.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==t})))})}function x(e){const n=g(e);return(0,A.jsxs)("div",{className:(0,t.A)("tabs-container",b.tabList),children:[(0,A.jsx)(y,{...n,...e}),(0,A.jsx)(v,{...n,...e})]})}function j(e){const n=(0,m.A)();return(0,A.jsx)(x,{...e,children:u(e.children)},String(n))}},19365:(e,n,r)=>{r.d(n,{A:()=>l});r(96540);var a=r(34164);const t={tabItem:"tabItem_Ymn6"};var i=r(74848);function l(e){let{children:n,hidden:r,className:l}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,l),hidden:r,children:n})}},64304:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var a=r(74848),t=r(28453),i=r(11470),l=r(19365);const s={title:"Migration guide to Android Adapty SDK 3.3.x",description:"",metadataTitle:""},o=void 0,d={id:"migration-to-android330",title:"Migration guide to Android Adapty SDK 3.3.x",description:"",source:"@site/versioned_docs/version-3.0/migration-to-android330.md",sourceDirName:".",slug:"/migration-to-android330",permalink:"/docs/migration-to-android330",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Migration guide to Android Adapty SDK 3.3.x",description:"",metadataTitle:""},sidebar:"tutorialSidebar",previous:{title:"Migration guide to iOS Adapty SDK 3.3",permalink:"/docs/migration-to-ios330"},next:{title:"Migration guide to Flutter Adapty SDK 3.3",permalink:"/docs/migration-to-flutter330"}},c={},u=[{value:"Update making purchase",id:"update-making-purchase",level:2},{value:"Modify Paywall Builder purchase events",id:"modify-paywall-builder-purchase-events",level:2},{value:"Change the signature of  onAwaitingSubscriptionUpdateParams method",id:"change-the-signature-of--onawaitingsubscriptionupdateparams-method",level:2},{value:"Update providing fallback paywalls",id:"update-providing-fallback-paywalls",level:2},{value:"Update third-party integration SDK configuration",id:"update-third-party-integration-sdk-configuration",level:2},{value:"Adjust",id:"adjust",level:3},{value:"AirBridge",id:"airbridge",level:3},{value:"Amplitude",id:"amplitude",level:3},{value:"AppMetrica",id:"appmetrica",level:3},{value:"AppsFlyer",id:"appsflyer",level:3},{value:"Branch",id:"branch",level:3},{value:"Facebook Ads",id:"facebook-ads",level:3},{value:"Firebase and Google Analytics",id:"firebase-and-google-analytics",level:3},{value:"Mixpanel",id:"mixpanel",level:3},{value:"OneSignal",id:"onesignal",level:3},{value:"Pushwoosh",id:"pushwoosh",level:3}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Adapty SDK 3.3.0 is a major release that brought some improvements which however may require some migration steps from you."}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Update how you handle making purchases in paywalls not created with Paywall Builder. Stop processing the ",(0,a.jsx)(n.code,{children:"USER_CANCELED"})," and ",(0,a.jsx)(n.code,{children:"PENDING_PURCHASE"})," error codes. A canceled purchase is no longer considered an error and will now appear in the non-error purchase results."]}),"\n",(0,a.jsxs)(n.li,{children:["Replace the ",(0,a.jsx)(n.code,{children:"onPurchaseCanceled"})," and ",(0,a.jsx)(n.code,{children:"onPurchaseSuccess"})," events with the new ",(0,a.jsx)(n.code,{children:"onPurchaseFinished"})," event for paywalls created with Paywall Builder. This change is for the same reason: canceled purchases are no longer treated as errors and will be included in the non-error purchase results."]}),"\n",(0,a.jsxs)(n.li,{children:["Change the method signature of ",(0,a.jsx)(n.code,{children:"onAwaitingSubscriptionUpdateParams"})," for Paywall Builder paywalls."]}),"\n",(0,a.jsx)(n.li,{children:"Update the method used to provide fallback paywalls if you pass the file URI directly."}),"\n",(0,a.jsx)(n.li,{children:"Update the integration configurations for for Adjust, AirBridge, Amplitude, AppMetrica, Appsflyer, Branch, Facebook Ads, Firebase and Google Analytics, Mixpanel, OneSignal, Pushwoosh."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"update-making-purchase",children:"Update making purchase"}),"\n",(0,a.jsxs)(n.p,{children:["Previously canceled and pending purchases were considered errors and returned the ",(0,a.jsx)(n.code,{children:"USER_CANCELED"})," and ",(0,a.jsx)(n.code,{children:"PENDING_PURCHASE"})," codes, respectively."]}),"\n",(0,a.jsxs)(n.p,{children:["Now a new ",(0,a.jsx)(n.code,{children:"AdaptyPurchaseResult"})," class is used to indicate canceled, successful, and pending purchases. Update the code of purchasing in the following way:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",children:'Adapty.makePurchase(activity, product) { result ->\n     when (result) {\n         is AdaptyResult.Success -> {\n-            val info = result.value\n-            val profile = info?.profile\n-        \n-            if (profile?.accessLevels?.get("YOUR_ACCESS_LEVEL")?.isActive == true) {\n-                // Grant access to the paid features\n-            }\n+            when (val purchaseResult = result.value) {\n+                is AdaptyPurchaseResult.Success -> {\n+                    val profile = purchaseResult.profile\n+                    if (profile.accessLevels["YOUR_ACCESS_LEVEL"]?.isActive == true) {\n+                        // Grant access to the paid features\n+                    }\n+                }\n+\n+                is AdaptyPurchaseResult.UserCanceled -> {\n+                    // Handle the case where the user canceled the purchase\n+                }\n+\n+                is AdaptyPurchaseResult.Pending -> {\n+                    // Handle deferred purchases (e.g., the user will pay offline with cash\n+                }\n+            }\n         }\n         is AdaptyResult.Error -> {\n             val error = result.error\n             // Handle the error\n         }\n     }\n }\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"making-purchases#make-purchase",children:"Make purchases in mobile app"})," page."]}),"\n",(0,a.jsx)(n.h2,{id:"modify-paywall-builder-purchase-events",children:"Modify Paywall Builder purchase events"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Add ",(0,a.jsx)(n.code,{children:"onPurchaseFinished"})," event:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:"+ public override fun onPurchaseFinished(\n+     purchaseResult: AdaptyPurchaseResult,\n+     product: AdaptyPaywallProduct,\n+     context: Context,\n+ ) {\n+    when (purchaseResult) {\n+        is AdaptyPurchaseResult.Success -> {\n+            // Grant access to the paid features\n+        }\n+        is AdaptyPurchaseResult.UserCanceled -> {\n+            // Handle the case where the user canceled the purchase\n+        }\n+        is AdaptyPurchaseResult.Pending -> {\n+            // Handle deferred purchases (e.g., the user will pay offline with cash)\n+        }\n+    }\n+ }\n"})}),"\n",(0,a.jsxs)(n.p,{children:["For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"android-handling-events#successful-canceled-or-pending-purchase",children:"Successful, canceled, or pending purchase"})," and event description."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Remove processing of the ",(0,a.jsx)(n.code,{children:"onPurchaseCancelled"})," event:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:"- public override fun onPurchaseCanceled(\n-     product: AdaptyPaywallProduct,\n-     context: Context,\n- ) {}\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Remove  ",(0,a.jsx)(n.code,{children:"onPurchaseSuccess"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:"\n- public override fun onPurchaseSuccess(\n-     profile: AdaptyProfile?,\n-     product: AdaptyPaywallProduct,\n-   context: Context,\n- ) {\n-     // Your logic on successful purchase\n- }\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"change-the-signature-of--onawaitingsubscriptionupdateparams-method",children:"Change the signature of  onAwaitingSubscriptionUpdateParams method"}),"\n",(0,a.jsxs)(n.p,{children:["Now if a new subscription is purchased while another is still active, call ",(0,a.jsx)(n.code,{children:"onSubscriptionUpdateParamsReceived(AdaptySubscriptionUpdateParameters...))"})," if the new subscription should replace a currently active subscription or ",(0,a.jsx)(n.code,{children:"onSubscriptionUpdateParamsReceived(null)"})," if the active subscription should remain active and the new one should be added separately:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:"- public override fun onAwaitingSubscriptionUpdateParams(\n-     product: AdaptyPaywallProduct,\n-     context: Context,\n- ): AdaptySubscriptionUpdateParameters? {\n-     return AdaptySubscriptionUpdateParameters(...)\n- }\n+ public override fun onAwaitingSubscriptionUpdateParams(\n+     product: AdaptyPaywallProduct,\n+     context: Context,\n+     onSubscriptionUpdateParamsReceived: SubscriptionUpdateParamsCallback,\n+ ) {\n+     onSubscriptionUpdateParamsReceived(AdaptySubscriptionUpdateParameters(...))\n+ }\n"})}),"\n",(0,a.jsxs)(n.p,{children:["See the ",(0,a.jsx)(n.a,{href:"android-handling-events#upgrade-subscription",children:"Upgrade subscription"})," doc section for the final code example."]}),"\n",(0,a.jsx)(n.h2,{id:"update-providing-fallback-paywalls",children:"Update providing fallback paywalls"}),"\n",(0,a.jsx)(n.p,{children:"If you pass file URI to provide fallback paywalls, update how you do it in the following way:"}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:"val fileUri: Uri = // Get the URI for the file with fallback paywalls\n- Adapty.setFallbackPaywalls(fileUri, callback)\n+ Adapty.setFallbackPaywalls(FileLocation.fromFileUri(fileUri), callback)\n"})})}),(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:"Uri fileUri = // Get the URI for the file with fallback paywalls\n- Adapty.setFallbackPaywalls(fileUri, callback);\n+ Adapty.setFallbackPaywalls(FileLocation.fromFileUri(fileUri), callback);\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"update-third-party-integration-sdk-configuration",children:"Update third-party integration SDK configuration"}),"\n",(0,a.jsx)(n.p,{children:"To ensure integrations work properly with Adapty Android SDK 3.3.0 and later, update your SDK configurations for the following integrations as described in the sections below."}),"\n",(0,a.jsx)(n.h3,{id:"adjust",children:"Adjust"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"adjust#sdk-configuration",children:"SDK configuration for Adjust integration"}),"."]}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"v5",label:"Adjust 5.x+",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'- Adjust.getAttribution { attribution ->\n-     if (attribution == null) return@getAttribution\n-\n-     Adjust.getAdid { adid ->\n-         if (adid == null) return@getAdid\n-\n-         Adapty.updateAttribution(attribution, AdaptyAttributionSource.ADJUST, adid) { error ->\n-             // Handle the error\n-         }\n-     }\n- }\n\n+ Adjust.getAdid { adid ->\n+     if (adid == null) return@getAdid\n+\n+     Adapty.setIntegrationIdentifier("adjust_device_id", adid) { error ->\n+         if (error != null) {\n+             // Handle the error\n+         }\n+     }\n+ }\n+\n+ Adjust.getAttribution { attribution ->\n+     if (attribution == null) return@getAttribution\n+\n+     Adapty.updateAttribution(attribution, "adjust") { error ->\n+         if (error != null) {\n+             // Handle the error\n+         }\n+     }\n+ }\n'})})}),(0,a.jsx)(l.A,{value:"v4",label:"Adjust 4.x",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' val config = AdjustConfig(context, adjustAppToken, environment)\n config.setOnAttributionChangedListener { attribution ->\n     attribution?.let { attribution ->\n-         Adapty.updateAttribution(attribution, AdaptyAttributionSource.ADJUST) { error ->\n+         Adapty.updateAttribution(attribution, "adjust") { error ->\n             if (error != null) {\n                 // Handle the error\n             }\n         }\n     }\n }\n Adjust.onCreate(config)\n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"airbridge",children:"AirBridge"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"airbridge#sdk-configuration",children:"SDK configuration for AirBridge integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' Airbridge.getDeviceInfo().getUUID(object: AirbridgeCallback.SimpleCallback<String>() {\n     override fun onSuccess(result: String) {\n-         val params = AdaptyProfileParameters.Builder()\n-             .withAirbridgeDeviceId(result)\n-             .build()\n-         Adapty.updateProfile(params) { error ->\n-             if (error != null) {\n-                 // Handle the error\n-             }\n-         }\n+         Adapty.setIntegrationIdentifier("airbridge_device_id", result) { error ->\n+             if (error != null) {\n+                 // Handle the error\n+             }\n+         }\n     }\n     override fun onFailure(throwable: Throwable) {\n     }\n })\n'})}),"\n",(0,a.jsx)(n.h3,{id:"amplitude",children:"Amplitude"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"amplitude#sdk-configuration",children:"SDK configuration for Amplitude integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' // For Amplitude maintenance SDK (obsolete)\n val amplitude = Amplitude.getInstance()\n val amplitudeDeviceId = amplitude.getDeviceId()\n val amplitudeUserId = amplitude.getUserId()\n\n //for actual Amplitude Kotlin SDK\n val amplitude = Amplitude(\n     Configuration(\n         apiKey = AMPLITUDE_API_KEY,\n         context = applicationContext\n     )\n )\n val amplitudeDeviceId = amplitude.store.deviceId\n val amplitudeUserId = amplitude.store.userId\n\n //\n\n- val params = AdaptyProfileParameters.Builder()\n-     .withAmplitudeDeviceId(amplitudeDeviceId)\n-     .withAmplitudeUserId(amplitudeUserId)\n-     .build()\n- Adapty.updateProfile(params) { error ->\n-     if (error != null) {\n-         // Handle the error\n-     }\n- }\n\n+ Adapty.setIntegrationIdentifier("amplitude_user_id", amplitudeUserId) { error ->\n+     if (error != null) {\n+         // Handle the error\n+     }\n+ }\n\n+ Adapty.setIntegrationIdentifier("amplitude_device_id", amplitudeDeviceId) { error ->\n+     if (error != null) {\n+         // Handle the error\n+     }\n+ }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"appmetrica",children:"AppMetrica"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"appmetrica#sdk-configuration",children:"SDK configuration for AppMetrica integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' val startupParamsCallback = object: StartupParamsCallback {\n     override fun onReceive(result: StartupParamsCallback.Result?) {\n         val deviceId = result?.deviceId ?: return\n\n-        val params = AdaptyProfileParameters.Builder()\n-            .withAppmetricaDeviceId(deviceId)\n-            .withAppmetricaProfileId("YOUR_ADAPTY_CUSTOMER_USER_ID")\n-            .build()\n-        Adapty.updateProfile(params) { error ->\n-            if (error != null) {\n-                // Handle the error\n-            }\n-        }\n\n+        Adapty.setIntegrationIdentifier("appmetrica_device_id", deviceId) { error ->\n+            if (error != null) {\n+                // Handle the error\n+            }\n+        }\n+        \n+        Adapty.setIntegrationIdentifier("appmetrica_profile_id", "YOUR_ADAPTY_CUSTOMER_USER_ID") { error ->\n+            if (error != null) {\n+                // Handle the error\n+            }\n+        }\n     }\n\n     override fun onRequestError(\n         reason: StartupParamsCallback.Reason,\n         result: StartupParamsCallback.Result?\n     ) {\n         // Handle the error\n     }\n }\n\n AppMetrica.requestStartupParams(context, startupParamsCallback, listOf(StartupParamsCallback.APPMETRICA_DEVICE_ID))\n'})}),"\n",(0,a.jsx)(n.h3,{id:"appsflyer",children:"AppsFlyer"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"appsflyer#sdk-configuration",children:"SDK configuration for AppsFlyer integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' val conversionListener: AppsFlyerConversionListener = object : AppsFlyerConversionListener {\n     override fun onConversionDataSuccess(conversionData: Map<String, Any>) {\n-        Adapty.updateAttribution(\n-            conversionData,\n-            AdaptyAttributionSource.APPSFLYER,\n-            AppsFlyerLib.getInstance().getAppsFlyerUID(context)\n-        ) { error ->\n-            if (error != null) {\n-                // Handle the error\n-            }\n-        }\n\n+        val uid = AppsFlyerLib.getInstance().getAppsFlyerUID(context)\n+        Adapty.setIntegrationIdentifier("appsflyer_id", uid) { error ->\n+            if (error != null) {\n+                // Handle the error\n+            }\n+        }\n+        Adapty.updateAttribution(conversionData, "appsflyer") { error ->\n+            if (error != null) {\n+                // Handle the error\n+            }\n+        }\n     }\n }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"branch",children:"Branch"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"branch#sdk-configuration",children:"SDK configuration for Branch integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'// Login and update attribution\n Branch.getAutoInstance(this)\n   .setIdentity("YOUR_USER_ID") { referringParams, error ->\n       referringParams?.let { data ->\n-            Adapty.updateAttribution(data, AdaptyAttributionSource.BRANCH) { error ->\n-                if (error != null) {\n-                    // Handle the error\n-                }\n-            }\n+            Adapty.updateAttribution(data, "branch") { error ->\n+                if (error != null) {\n+                    // Handle the error\n+                }\n+            }\n       }\n   }\n\n // Logout\n Branch.getAutoInstance(context).logout()\n'})}),"\n",(0,a.jsx)(n.h3,{id:"facebook-ads",children:"Facebook Ads"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"facebook-ads#sdk-configuration",children:"SDK configuration for Facebook Ads integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'- val builder = AdaptyProfileParameters.Builder()\n-     .withFacebookAnonymousId(AppEventsLogger.getAnonymousAppDeviceGUID(context))\n-   \n- Adapty.updateProfile(builder.build()) { error ->\n-     if (error != null) {\n-        // Handle the error\n-     }\n- }\n\n+ Adapty.setIntegrationIdentifier(\n+     "facebook_anonymous_id",\n+     AppEventsLogger.getAnonymousAppDeviceGUID(context)\n+ ) { error ->\n+     if (error != null) {\n+        // Handle the error\n+     }\n+ }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"firebase-and-google-analytics",children:"Firebase and Google Analytics"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"firebase-and-google-analytics",children:"SDK configuration for Firebase and Google Analytics integration"}),"."]}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' // After Adapty.activate()\n\n FirebaseAnalytics.getInstance(context).appInstanceId.addOnSuccessListener { appInstanceId ->\n-    Adapty.updateProfile(\n-        AdaptyProfileParameters.Builder()\n-            .withFirebaseAppInstanceId(appInstanceId)\n-            .build()\n-    ) { error ->\n-        if (error != null) {\n-            // Handle the error\n-        }\n-    }\n+    Adapty.setIntegrationIdentifier("firebase_app_instance_id", appInstanceId) { error ->\n+        if (error != null) {\n+            // Handle the error\n+        }\n+    }\n }\n'})})}),(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'// After Adapty.activate()\n\n- FirebaseAnalytics.getInstance(context).getAppInstanceId().addOnSuccessListener(appInstanceId -> {\n-     AdaptyProfileParameters params = new AdaptyProfileParameters.Builder()\n-         .withFirebaseAppInstanceId(appInstanceId)\n-         .build();\n-     \n-     Adapty.updateProfile(params, error -> {\n-         if (error != null) {\n-             // Handle the error\n-         }\n-     });\n- });\n\n+ FirebaseAnalytics.getInstance(context).getAppInstanceId().addOnSuccessListener(appInstanceId -> {\n+     Adapty.setIntegrationIdentifier("firebase_app_instance_id", appInstanceId, error -> {\n+        if (error != null) {\n+            // Handle the error\n+         }\n+     });\n+ });\n'})})})]}),"\n",(0,a.jsx)(n.h3,{id:"mixpanel",children:"Mixpanel"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"mixpanel#sdk-configuration",children:"SDK configuration for Mixpanel integration"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'- val params = AdaptyProfileParameters.Builder()\n-     .withMixpanelUserId(mixpanelAPI.distinctId)\n-     .build()\n-\n- Adapty.updateProfile(params) { error ->\n-     if (error != null) {\n-         // Handle the error\n-     }\n- }\n\n+ Adapty.setIntegrationIdentifier("mixpanel_user_id", mixpanelAPI.distinctId) { error ->\n+     if (error != null) {\n+         // Handle the error\n+     }\n+ }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"onesignal",children:"OneSignal"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"onesignal#sdk-configuration",children:"SDK configuration for OneSignal integration"}),"."]}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"v5+",label:"OneSignal SDK v5+ (current)",default:!0,children:(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"kotlin",label:"Android (Kotlin)",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' // SubscriptionID \n val oneSignalSubscriptionObserver = object: IPushSubscriptionObserver {\n     override fun onPushSubscriptionChange(state: PushSubscriptionChangedState) {\n-        val params = AdaptyProfileParameters.Builder()\n-            .withOneSignalSubscriptionId(state.current.id)\n-            .build()\n-        \n-        Adapty.updateProfile(params) { error ->\n+        Adapty.setIntegrationIdentifier("one_signal_subscription_id", state.current.id) { error ->\n             if (error != null) {\n                 // Handle the error\n             }\n        }\n     }\n }\n'})})}),(0,a.jsx)(l.A,{value:"java",label:"(Android) Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' // SubscriptionID \n IPushSubscriptionObserver oneSignalSubscriptionObserver = state -> {\n-    AdaptyProfileParameters params = new AdaptyProfileParameters.Builder()\n-            .withOneSignalSubscriptionId(state.getCurrent().getId())\n-            .build();\n-    Adapty.updateProfile(params, error -> {\n+    Adapty.setIntegrationIdentifier("one_signal_subscription_id", state.getCurrent().getId(), error -> {\n         if (error != null) {\n             // Handle the error\n         }\n     });\n };\n'})})})]})}),(0,a.jsx)(l.A,{value:"pre-v5",label:"OneSignal SDK v. up to 4.x (legacy)",default:!0,children:(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"kotlin",label:"Android (Kotlin)",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' // PlayerID \n val osSubscriptionObserver = OSSubscriptionObserver { stateChanges ->\n     stateChanges?.to?.userId?.let { playerId ->\n-        val params = AdaptyProfileParameters.Builder()\n-            .withOneSignalPlayerId(playerId)\n-            .build()\n-      \n-        Adapty.updateProfile(params) { error ->\n+        Adapty.setIntegrationIdentifier("one_signal_player_id", playerId) { error ->\n             if (error != null) {\n                 // Handle the error\n             }\n-        }\n     }\n }\n'})})}),(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:' // PlayerID \n OSSubscriptionObserver osSubscriptionObserver = stateChanges -> {\n     OSSubscriptionState to = stateChanges != null ? stateChanges.getTo() : null;\n     String playerId = to != null ? to.getUserId() : null;\n     \n     if (playerId != null) {\n-        AdaptyProfileParameters params1 = new AdaptyProfileParameters.Builder()\n-                .withOneSignalPlayerId(playerId)\n-                .build();\n-        \n-        Adapty.updateProfile(params1, error -> {\n+        Adapty.setIntegrationIdentifier("one_signal_player_id", playerId, error -> {\n             if (error != null) {\n                 // Handle the error\n             }\n-        });\n     }\n };\n'})})})]})})]}),"\n",(0,a.jsx)(n.h3,{id:"pushwoosh",children:"Pushwoosh"}),"\n",(0,a.jsxs)(n.p,{children:["Update your mobile app code as shown below. For the complete code example, check out the ",(0,a.jsx)(n.a,{href:"pushwoosh#sdk-configuration",children:"SDK configuration for Pushwoosh integration"}),"."]}),"\n",(0,a.jsxs)(i.A,{groupId:"current-os",queryString:!0,children:[(0,a.jsx)(l.A,{value:"kotlin",label:"Kotlin",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'- val params = AdaptyProfileParameters.Builder()\n-     .withPushwooshHwid(Pushwoosh.getInstance().hwid)\n-     .build()\n  \n- Adapty.updateProfile(params) { error ->\n+ Adapty.setIntegrationIdentifier("pushwoosh_hwid", Pushwoosh.getInstance().hwid) { error ->\n     if (error != null) {\n         // Handle the error\n     }\n  }\n'})})}),(0,a.jsx)(l.A,{value:"java",label:"Java",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-diff",metastring:"showLineNumbers",children:'- AdaptyProfileParameters params = new AdaptyProfileParameters.Builder()\n-     .withPushwooshHwid(Pushwoosh.getInstance().getHwid())\n-     .build();\n-\n- Adapty.updateProfile(params, error -> {\n+ Adapty.setIntegrationIdentifier("pushwoosh_hwid", Pushwoosh.getInstance().getHwid(), error -> {\n     if (error != null) {\n         // Handle the error\n     }\n  });\n'})})})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);