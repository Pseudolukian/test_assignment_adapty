"use strict";(self.webpackChunkadapty_docs=self.webpackChunkadapty_docs||[]).push([[2552],{34014:(a,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>r,toc:()=>c});var l=s(74848),t=s(28453);s(26393);const n={title:"Use fallback paywalls",description:"Learn how to use fallback paywalls to improve user retention.",metadataTitle:"How to Use Fallback Paywalls | Adapty Docs"},i=void 0,r={id:"use-fallback-paywalls",title:"Use fallback paywalls",description:"Learn how to use fallback paywalls to improve user retention.",source:"@site/versioned_docs/version-3.0/use-fallback-paywalls.md",sourceDirName:".",slug:"/use-fallback-paywalls",permalink:"/test_assignment_adapty/docs/use-fallback-paywalls",draft:!1,unlisted:!1,tags:[],version:"3.0",frontMatter:{title:"Use fallback paywalls",description:"Learn how to use fallback paywalls to improve user retention.",metadataTitle:"How to Use Fallback Paywalls | Adapty Docs"},sidebar:"tutorialSidebar",previous:{title:"Track onboarding screens",permalink:"/test_assignment_adapty/docs/onboarding-screens-tracking"},next:{title:"iOS - Use fallback paywalls",permalink:"/test_assignment_adapty/docs/ios-use-fallback-paywalls"}},o={},c=[];function d(a){const e={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,t.R)(),...a.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.p,{children:"A paywall is an in-app storefront where customers can see and purchase products within your mobile app. Typically, paywalls are fetched from the server when a customer accesses them. However, Adapty allows you to have fallback paywalls for situations when a user opens the app without a connection to the Adapty backend (e.g., no internet connection or in the rare case of backend unavailability) and there's no cache on the device."}),"\n",(0,l.jsxs)(e.p,{children:["Adapty generates fallbacks as a JSON file in the necessary format, reflecting English versions of the paywalls you've configured in the Adapty Dashboard. Download it and pass it or its contents to the ",(0,l.jsx)(e.code,{children:"Adapty.setFallbackPaywalls"})," method, following the instructions specific per framework:"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"ios-use-fallback-paywalls",children:"iOS"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"android-use-fallback-paywalls",children:"Android"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"flutter-use-fallback-paywalls",children:"Flutter"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"react-native-use-fallback-paywalls",children:"React Native"})}),"\n",(0,l.jsx)(e.li,{children:(0,l.jsx)(e.a,{href:"unity-use-fallback-paywalls",children:"Unity"})}),"\n"]})]})}function p(a={}){const{wrapper:e}={...(0,t.R)(),...a.components};return e?(0,l.jsx)(e,{...a,children:(0,l.jsx)(d,{...a})}):d(a)}}}]);